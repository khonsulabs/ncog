(function() {var implementors = {};
implementors["ncog_encryption"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;HpkeError&gt; for <a class=\"enum\" href=\"ncog_encryption/enum.Error.html\" title=\"enum ncog_encryption::Error\">Error</a>","synthetic":false,"types":["ncog_encryption::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/signature/1.4.0/signature/error/struct.Error.html\" title=\"struct signature::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"ncog_encryption/enum.Error.html\" title=\"enum ncog_encryption::Error\">Error</a>","synthetic":false,"types":["ncog_encryption::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PemError&gt; for <a class=\"enum\" href=\"ncog_encryption/enum.Error.html\" title=\"enum ncog_encryption::Error\">Error</a>","synthetic":false,"types":["ncog_encryption::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ASN1Error&gt; for <a class=\"enum\" href=\"ncog_encryption/enum.Error.html\" title=\"enum ncog_encryption::Error\">Error</a>","synthetic":false,"types":["ncog_encryption::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.55.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"ncog_encryption/struct.UnsupportedPublicKeyKind.html\" title=\"struct ncog_encryption::UnsupportedPublicKeyKind\">UnsupportedPublicKeyKind</a>&gt; for <a class=\"enum\" href=\"ncog_encryption/enum.Error.html\" title=\"enum ncog_encryption::Error\">Error</a>","synthetic":false,"types":["ncog_encryption::Error"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()